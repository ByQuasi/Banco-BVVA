/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cajeroonline;

import java.awt.Font;
import java.awt.FontMetrics;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.CallableStatement;
import java.io.FileInputStream;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class IngresoMaster extends javax.swing.JFrame {

    /**
     * Creates new form asdasda
     */
    public IngresoMaster() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stocksTableButton = new javax.swing.JButton();
        stocksModifButton = new javax.swing.JButton();
        stocksBorrarButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        seguroBorrarButton = new javax.swing.JButton();
        seguroModifButton = new javax.swing.JButton();
        segurosTableButton = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        inverBorrarButton = new javax.swing.JButton();
        inverModifButton = new javax.swing.JButton();
        inversionesTableButton = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        itemBorrarButton = new javax.swing.JButton();
        itemModifButton = new javax.swing.JButton();
        itemTableButton = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        creditosBorrarButton = new javax.swing.JButton();
        creditosModifButton = new javax.swing.JButton();
        creditosTableButton = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        tarjetaBorrarButton = new javax.swing.JButton();
        tarjetaModifButton = new javax.swing.JButton();
        tarjetasTableButton = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        historialButton = new javax.swing.JButton();
        plazoButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        mesesButton = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));

        jLabel1.setText("Stocks");

        stocksTableButton.setText("Ver Stocks");
        stocksTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksTableButtonActionPerformed(evt);
            }
        });

        stocksModifButton.setText("Modificar");
        stocksModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksModifButtonActionPerformed(evt);
            }
        });

        stocksBorrarButton.setText("Borrar");
        stocksBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksBorrarButtonActionPerformed(evt);
            }
        });

        jTextField1.setText("Ingrese id...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(stocksBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stocksModifButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(31, 31, 31))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(stocksTableButton)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stocksTableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stocksModifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stocksBorrarButton)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Seguros");

        seguroBorrarButton.setText("Borrar");
        seguroBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguroBorrarButtonActionPerformed(evt);
            }
        });

        seguroModifButton.setText("Modificar");
        seguroModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seguroModifButtonActionPerformed(evt);
            }
        });

        segurosTableButton.setText("Ver Seguros");
        segurosTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segurosTableButtonActionPerformed(evt);
            }
        });

        jTextField2.setText("Ingrese id...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seguroBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seguroModifButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segurosTableButton)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(segurosTableButton)
                    .addComponent(seguroModifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seguroBorrarButton)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inverBorrarButton.setText("Borrar");
        inverBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inverBorrarButtonActionPerformed(evt);
            }
        });

        inverModifButton.setText("Modificar");
        inverModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inverModifButtonActionPerformed(evt);
            }
        });

        inversionesTableButton.setText("Ver Inversiones");
        inversionesTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inversionesTableButtonActionPerformed(evt);
            }
        });

        jTextField3.setText("Ingrese id...");

        jLabel3.setText("Inversiones");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(16, 16, 16))
                    .addComponent(inverBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(inverModifButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inversionesTableButton))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inversionesTableButton)
                    .addComponent(inverModifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inverBorrarButton)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        itemBorrarButton.setText("Borrar");
        itemBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBorrarButtonActionPerformed(evt);
            }
        });

        itemModifButton.setText("Modificar");
        itemModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemModifButtonActionPerformed(evt);
            }
        });

        itemTableButton.setText("Ver Items");
        itemTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTableButtonActionPerformed(evt);
            }
        });

        jTextField5.setText("Ingrese id...");

        jLabel5.setText("Items Mall");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(itemModifButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(itemBorrarButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(13, 13, 13))
                    .addComponent(itemTableButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemTableButton)
                    .addComponent(itemModifButton))
                .addGap(7, 7, 7)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemBorrarButton)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        creditosBorrarButton.setText("Borrar");
        creditosBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditosBorrarButtonActionPerformed(evt);
            }
        });

        creditosModifButton.setText("Modificar");
        creditosModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditosModifButtonActionPerformed(evt);
            }
        });

        creditosTableButton.setText("Ver Creditos");
        creditosTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditosTableButtonActionPerformed(evt);
            }
        });

        jTextField4.setText("Ingrese id...");

        jLabel4.setText("Creditos");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(creditosBorrarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(creditosModifButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(creditosTableButton)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditosTableButton)
                    .addComponent(creditosModifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(creditosBorrarButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tarjetaBorrarButton.setText("Borrar");
        tarjetaBorrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarjetaBorrarButtonActionPerformed(evt);
            }
        });

        tarjetaModifButton.setText("Modificar");
        tarjetaModifButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarjetaModifButtonActionPerformed(evt);
            }
        });

        tarjetasTableButton.setText("Ver Tarjetas");
        tarjetasTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarjetasTableButtonActionPerformed(evt);
            }
        });

        jTextField6.setText("Ingrese id...");

        jLabel6.setText("Tarjetas");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6)
                            .addComponent(tarjetaBorrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tarjetaModifButton, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addComponent(tarjetasTableButton)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tarjetasTableButton)
                    .addComponent(tarjetaModifButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tarjetaBorrarButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLabel7.setText("Llamar Eventos");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(15, 15, 15))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        historialButton.setText("Llamar");
        historialButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historialButtonActionPerformed(evt);
            }
        });

        plazoButton.setText("Llamar");
        plazoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plazoButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Actualizar Historial Crediticio");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel9.setText("Pagar Plazos Fijos");

        jLabel10.setText("Actualizar meses");

        mesesButton.setText("Llamar");
        mesesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(historialButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(plazoButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(mesesButton)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel8)
                        .addGap(14, 14, 14)
                        .addComponent(historialButton)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(plazoButton)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel10)
                        .addGap(4, 4, 4)
                        .addComponent(mesesButton))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itemTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTableButtonActionPerformed
        setTable(0);
    }//GEN-LAST:event_itemTableButtonActionPerformed

    private void segurosTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segurosTableButtonActionPerformed
        setTable(1);
    }//GEN-LAST:event_segurosTableButtonActionPerformed

    private void inversionesTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inversionesTableButtonActionPerformed
        setTable(2);
    }//GEN-LAST:event_inversionesTableButtonActionPerformed

    private void tarjetasTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarjetasTableButtonActionPerformed
        setTable(3);
    }//GEN-LAST:event_tarjetasTableButtonActionPerformed

    private void creditosTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditosTableButtonActionPerformed
        setTable(4);
    }//GEN-LAST:event_creditosTableButtonActionPerformed

    private void stocksTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksTableButtonActionPerformed
        setTable(5);
    }//GEN-LAST:event_stocksTableButtonActionPerformed

    private void itemModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemModifButtonActionPerformed
        String[] opciones = {"Modificar", "Modificacion en masa", "Agregar", "Cancelar"};

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "¿Qué acción deseas realizar?",
                "Seleccionar Acción",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]
        );

        switch (seleccion) {
            case 0:
                JFrame frame = new JFrame();
                frame.setSize(200, 450);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);

                JPanel panel = new JPanel();
                panel.setLayout(null);
                panel.setBounds(0, 0, 600, 600);
                frame.add(panel);

                JLabel UI = new JLabel();
                UI.setText("UI item: ");
                UI.setBounds(10, 10, 100, 25);
                panel.add(UI);

                JTextField field_id = new JTextField();

                field_id.setBounds(10, 27, 100, 25);
                panel.add(field_id);

                Connection cn = c.getConnection();
                String statement = "select * from items_data where UI = ?";
                try {
                    PreparedStatement pst = cn.prepareStatement(statement);
                    pst.setInt(1, 1);
                    ResultSet rs = pst.executeQuery();
                    ResultSetMetaData data = rs.getMetaData();
                    int aux = data.getColumnCount();
                    String[] data2 = new String[aux];
                    Map<String, JTextField> textFieldMap = new HashMap<>();

                    for (int i = 1; i <= aux; i++) {
                        if (i != 7) {
                            JLabel label = new JLabel();
                            label.setName("label" + i);
                            label.setText(data.getColumnName(i) + ":");
                            if (i < 7) {
                                label.setBounds(10, 10 + i * 40, 100, 25);
                            } else {
                                label.setBounds(10, 10 + (i - 1) * 40, 100, 25);
                            }
                            panel.add(label);
                            data2[i - 1] = data.getColumnName(i);
                            if (i == aux) {

                                JButton button = new JButton();
                                button.setText("Obtener Icono");
                                button.setBounds(10, 27 + (i - 1) * 40, 125, 25);
                                button.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        JFileChooser fileChooser = new JFileChooser();

                                        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg", "gif"));

                                        frame.add(fileChooser);
                                        int result = fileChooser.showOpenDialog(null);
                                        if (result == JFileChooser.APPROVE_OPTION) {
                                            selectedFile = fileChooser.getSelectedFile();

                                        }

                                        JTextField field = new JTextField();
                                        field.setText("69");
                                        textFieldMap.put("field" + (aux - 1), field);
                                    }
                                });
                                panel.add(button);

                            } else {
                                JTextField field = new JTextField();
                                field.setName("field" + i);

                                field.setBounds(10, 27 + i * 40, 100, 25);

                                panel.add(field);
                                textFieldMap.put("field" + (i - 1), field);
                            }
                        }

                    }

                    JButton button = new JButton();
                    button.setText("Finalizar");
                    button.setBounds(50, 27 + aux * 40, 100, 25);
                    button.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            Connection cn = c.getConnection();
                            StringBuilder statement = new StringBuilder();
                            statement.append("update items_data set ");
                            //creo por un for el statement con los datos anteriores
                            for (int i = 0; i <= aux - 1; i++) {
                                if (i != 6) {
                                    statement.append(data2[i]);
                                    statement.append(" = ?, ");
                                }

                            }
                            statement.setLength(statement.length() - 2);
                            statement.append(" where UI = ?");
                            String aux2 = statement.toString();

                            try {
                                PreparedStatement pst = cn.prepareStatement(aux2);
                                for (int i = 0; i < aux; i++) {
                                    JTextField textf = textFieldMap.get("field" + i);

                                    if (textf != null) {
                                        //voy insertando los valores del statement de a uno, por esto se tienen que completar cada field, es generico
                                        String text = textf.getText().trim();
                                        if (text.matches("^[A-Za-zÑñ].*")) {
                                            pst.setString(i + 1, text);
                                        } else {
                                            pst.setDouble(i + 1, Double.parseDouble(text.trim()));

                                        }
                                    } else if (i == 6) {
                                        FileInputStream fis = new FileInputStream(selectedFile);

                                        pst.setBinaryStream(i + 1, fis, (int) selectedFile.length());
                                    }

                                }
                                pst.setInt(aux, Integer.parseInt(field_id.getText().trim()));
                                pst.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Hecho");
                                pst.close();
                                cn.close();
                            } catch (Exception e) {
                                System.out.println("Error en button: " + e);
                            }
                        }
                    });
                    panel.add(button);
                } catch (Exception e) {
                    System.out.println("Error en modif: " + e);
                }
                frame.setVisible(true);
                break;
            case 1:
                JFrame frame3 = new JFrame();
                frame3.setSize(200, 200);
                frame3.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame3.setResizable(false);
                frame3.setLocationRelativeTo(null);

                JPanel panel3 = new JPanel();
                panel3.setLayout(null);
                panel3.setBounds(0, 0, 600, 600);
                frame3.add(panel3);

                JLabel itemName = new JLabel();
                itemName.setText("item_name: ");
                itemName.setBounds(10, 10, 100, 25);
                panel3.add(itemName);

                JTextField field_id3 = new JTextField();
                field_id3.setBounds(10, 27, 100, 25);
                panel3.add(field_id3);

                JLabel image = new JLabel();
                image.setText("item_name: ");
                image.setBounds(10, 50, 100, 25);
                panel3.add(image);
                JButton button1 = new JButton();
                button1.setText("Obtener Icono");
                button1.setBounds(10, 77, 125, 25);
                button1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        JFileChooser fileChooser = new JFileChooser();
                        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg", "gif"));
                        frame3.add(fileChooser);
                        int result = fileChooser.showOpenDialog(null);
                        if (result == JFileChooser.APPROVE_OPTION) {
                            selectedFile = fileChooser.getSelectedFile();

                        }
                    }
                });
                panel3.add(button1);
                JButton button2 = new JButton();
                button2.setText("Finalizar");
                button2.setBounds(50, 110, 125, 25);
                button2.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        Connection cn1 = c.getConnection();
                        String statement1 = "update items_data set image = ? where item_name = ?";
                        System.out.println("niggas");
                        try {
                            PreparedStatement pst = cn1.prepareStatement(statement1);
                            FileInputStream fis = new FileInputStream(selectedFile);
                            pst.setBinaryStream(1, fis, (int) selectedFile.length());
                            pst.setString(2, field_id3.getText().trim());
                            pst.executeUpdate();
                            pst.close();
                            cn1.close();
                            JOptionPane.showMessageDialog(null, "Hecho");
                        } catch (Exception e) {
                            System.out.println("niggas por 2" + e);
                            JOptionPane.showMessageDialog(null, "Error en case1: " + e);
                        }
                    }
                });
                panel3.add(button2);
                frame3.setVisible(true);
                break;

            case 2:
                JFrame frame2 = new JFrame();
                frame2.setSize(200, 450);
                frame2.setResizable(false);
                frame2.setLocationRelativeTo(null);
                frame2.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

                JPanel panel2 = new JPanel();
                panel2.setLayout(null);
                panel2.setBounds(0, 0, 600, 600);
                frame2.add(panel2);

                JLabel id_item2 = new JLabel();
                id_item2.setText("UI item: ");
                id_item2.setBounds(10, 10, 100, 25);
                panel2.add(id_item2);

                JTextField field_id2 = new JTextField();

                field_id2.setBounds(10, 27, 100, 25);
                panel2.add(field_id2);

                Connection cnc = c.getConnection();
                String statement2 = "select * from items_data";
                try {
                    PreparedStatement pst = cnc.prepareStatement(statement2);

                    ResultSet rs = pst.executeQuery();
                    ResultSetMetaData data = rs.getMetaData();
                    int aux = data.getColumnCount();
                    Map<String, JTextField> textFieldMap = new HashMap<>();
                    for (int i = 1; i <= aux; i++) {
                        if (i != 7) {
                            JLabel label = new JLabel();
                            label.setName("label" + i);
                            label.setText(data.getColumnName(i));
                            if (i < 7) {
                                label.setBounds(10, 10 + i * 40, 100, 25);
                            } else {
                                label.setBounds(10, 10 + (i - 1) * 40, 100, 25);
                            }
                            panel2.add(label);

                            if (i == aux) {

                                JButton button = new JButton();
                                button.setText("Obtener icono");
                                button.setBounds(10, 27 + (i - 1) * 40, 125, 25);
                                button.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        JFileChooser fileChooser = new JFileChooser();

                                        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg", "gif"));

                                        frame2.add(fileChooser);
                                        int result = fileChooser.showOpenDialog(null);
                                        if (result == JFileChooser.APPROVE_OPTION) {
                                            selectedFile = fileChooser.getSelectedFile();

                                        }

                                    }
                                });
                                panel2.add(button);

                            } else {
                                JTextField field = new JTextField();
                                field.setName("field" + i);
                                field.setBounds(10, 27 + i * 40, 100, 25);
                                panel2.add(field);
                                textFieldMap.put("field" + (i - 1), field);
                            }
                        } else {

                            textFieldMap.put("field" + (i - 1), field_id2);
                        }

                    }
                    pst.close();
                    rs.close();
                    cnc.close();
                    JButton button = new JButton();
                    button.setText("Finalizar");
                    button.setBounds(50, 27 + aux * 40, 100, 25);
                    button.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {

                            Connection cn = c.getConnection();
                            StringBuilder statement = new StringBuilder();
                            statement.append("insert into items_data values(?,?,?,?,?,?,?,?)");
                            String aux2 = statement.toString();

                            try {
                                PreparedStatement pst = cn.prepareStatement(aux2);
                                pst.setInt(1, Integer.parseInt(field_id2.getText().trim()));
                                for (int i = 0; i < aux; i++) {
                                    JTextField textf = textFieldMap.get("field" + i);
                                    if (textf != null) {
                                        String text = textf.getText().trim();
                                        if (text.matches("^[A-Za-zÑñ].*")) {
                                            pst.setString(i + 1, text);

                                        } else {

                                            pst.setDouble(i + 1, Double.parseDouble(text.trim()));

                                        }
                                    } else if (i == 7) {
                                        FileInputStream fis = new FileInputStream(selectedFile);
                                        pst.setBinaryStream(i + 1, fis, (int) selectedFile.length());
                                    }

                                }
                                pst.executeUpdate();
                                pst.close();
                                cn.close();

                                JOptionPane.showMessageDialog(null, "hecho");
                            } catch (Exception e) {
                                System.out.println("Error en button: " + e);
                            }
                        }
                    });
                    panel2.add(button);
                } catch (Exception e) {
                    System.out.println("Error en modif: " + e);
                }
                frame2.setVisible(true);
                break;
            case 3:
                break;
            case JOptionPane.CLOSED_OPTION: // Si cierra el diálogo

                break;
        }
    }//GEN-LAST:event_itemModifButtonActionPerformed

    private void seguroModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguroModifButtonActionPerformed
        modifEvent(1);
    }//GEN-LAST:event_seguroModifButtonActionPerformed

    private void inverModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inverModifButtonActionPerformed
        modifEvent(2);
    }//GEN-LAST:event_inverModifButtonActionPerformed

    private void tarjetaModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarjetaModifButtonActionPerformed
        modifEvent(3);
    }//GEN-LAST:event_tarjetaModifButtonActionPerformed

    private void creditosModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditosModifButtonActionPerformed
        modifEvent(4);
    }//GEN-LAST:event_creditosModifButtonActionPerformed

    private void stocksModifButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksModifButtonActionPerformed
        modifEvent(5);
    }//GEN-LAST:event_stocksModifButtonActionPerformed

    private void itemBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBorrarButtonActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(
                null,
                "¿Está seguro de que quiere realizar la baja?",
                "Confirmar Baja",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (respuesta == JOptionPane.YES_OPTION) {

            String statement;
            Connection cn = c.getConnection();

            try {
                statement = "delete from items_data where UI = ?";
                PreparedStatement pr = cn.prepareStatement(statement);
                pr.setInt(1, Integer.parseInt(jTextField5.getText().trim()));
                pr.executeUpdate();
                pr.close();
                cn.close();
                JOptionPane.showMessageDialog(null, "Hecho!");
            } catch (Exception e) {
                System.out.println("Error borrar: " + e);
            }

        }
    }//GEN-LAST:event_itemBorrarButtonActionPerformed

    private void seguroBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seguroBorrarButtonActionPerformed
        borrar(1, "seguros", Integer.parseInt(jTextField2.getText().trim()));

    }//GEN-LAST:event_seguroBorrarButtonActionPerformed

    private void inverBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inverBorrarButtonActionPerformed
        borrar(2, "inversiones", Integer.parseInt(jTextField3.getText().trim()));
    }//GEN-LAST:event_inverBorrarButtonActionPerformed

    private void tarjetaBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarjetaBorrarButtonActionPerformed
        borrar(3, "tarjetas", Integer.parseInt(jTextField6.getText().trim()));
    }//GEN-LAST:event_tarjetaBorrarButtonActionPerformed

    private void creditosBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditosBorrarButtonActionPerformed
        borrar(4, "creditos", Integer.parseInt(jTextField4.getText().trim()));
    }//GEN-LAST:event_creditosBorrarButtonActionPerformed

    private void stocksBorrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksBorrarButtonActionPerformed
        borrar(5, "stocks", Integer.parseInt(jTextField1.getText().trim()));
    }//GEN-LAST:event_stocksBorrarButtonActionPerformed

    private void historialButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historialButtonActionPerformed
        Connection cn = c.getConnection();
        try {
            PreparedStatement pst = cn.prepareStatement("select user_data.id from user_data");
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                do {
                    int id = rs.getInt("id");
                    CallableStatement stmt = cn.prepareCall("{CALL CalcularNivelCredito(?)}");
                    stmt.setInt(1, id);
                    ResultSet r = stmt.executeQuery();
                    if (r.next()) {
                        double nivelCredito = r.getDouble("NivelCreditoCalculado");
                        PreparedStatement p = cn.prepareStatement("select * from crediticio_data where user_id = ?");
                        p.setInt(1, id);
                        ResultSet resu = p.executeQuery();
                        if (resu.next()) {
                            double res = (resu.getDouble("historial") + nivelCredito) / 2;
                            PreparedStatement temp = cn.prepareStatement("update crediticio_data set historial = ? where user_id = ?");
                            temp.setDouble(1, res);
                            temp.setInt(2, id);
                            temp.executeUpdate();
                            temp.close();
                        } else {
                            PreparedStatement temp = cn.prepareStatement("insert into crediticio_data values(?,?)");
                            temp.setInt(1, id);
                            temp.setDouble(2, nivelCredito);
                            temp.executeUpdate();
                            temp.close();
                        }
                    }

                } while (rs.next());
            }
            pst.close();
            rs.close();
            cn.close();

        } catch (Exception ex) {
            System.out.println("Exception " + ex);
        }
    }//GEN-LAST:event_historialButtonActionPerformed

    private void plazoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plazoButtonActionPerformed
        Connection cn = c.getConnection();
        try {
            PreparedStatement pst = cn.prepareStatement("select * from cobros_data where pagado = No");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                PreparedStatement cobro;
                int id = rs.getInt("user_id");
                do {
                    if (rs.getInt("meses") == rs.getInt("meses_totales")) {
                        double monto = rs.getDouble("monto");
                        double porcentaje = rs.getDouble("porcentaje");
                        double res = monto + monto * porcentaje / 100;

                        PreparedStatement ps = cn.prepareStatement("update user_data set money = money - ? where id = 1");
                        ps.setDouble(1, res);
                        ps.executeUpdate();

                        PreparedStatement pag = cn.prepareStatement("update cobros_data set pagado = ? where user_id = ?");
                        pag.setString(1, "Si");
                        pag.setInt(2, id);
                        pag.executeUpdate();
                        PreparedStatement p = cn.prepareStatement("update user_data set money = money + ? where id = ?");
                        p.setDouble(1, res);
                        p.setInt(2, id);
                        p.executeUpdate();

                        p.close();
                        pag.close();
                        ps.close();
                    }
                } while (rs.next());

            }
            rs.close();
            pst.close();
            cn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en " + e);
        }
    }//GEN-LAST:event_plazoButtonActionPerformed

    private void mesesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesesButtonActionPerformed
        Connection cn = c.getConnection();
        try {
            CallableStatement cs = cn.prepareCall("{CALL actualizar_meses_para_pagados()}");
            cs.execute();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_mesesButtonActionPerformed

    private void borrar(int id, String item, int id_item) {
        int respuesta = JOptionPane.showConfirmDialog(
                null,
                "¿Está seguro de que quiere realizar la baja?",
                "Confirmar Baja",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);

        if (respuesta == JOptionPane.YES_OPTION) {

            String[] tables = {"items_data", "seguros_id", "inversiones_id", "tarjetas_id", "creditos_id", "stocks_data"};
            String[] revTables = {"user_data", "seguros_data", "inversiones_data", "tarjetas_data", "creditos_data", "stock_prices", "cobros_data"};
            boolean flag = false;
            String statement = "";
            Connection cn = c.getConnection();
            if (id == 1 || id == 3) {
                statement = "select * from " + revTables[0] + " where " + item + " = ?";

                try {
                    PreparedStatement pst = cn.prepareStatement(statement);
                    pst.setInt(1, id_item);
                    ResultSet rs = pst.executeQuery();
                    if (rs.next()) {
                        flag = true;
                    }
                    pst.close();
                    rs.close();
                } catch (Exception e) {
                    System.out.println("Error en borrar: " + e);
                }
            }
            if (flag == false) {
                try {
                    statement = "select * from " + revTables[id] + " where " + tables[id] + " = ?";
                    PreparedStatement ps = cn.prepareStatement(statement);
                    ps.setInt(1, id_item);
                    ResultSet r = ps.executeQuery();
                    if (r.next()) {
                        flag = true;
                    }
                    ps.close();
                    r.close();
                } catch (Exception e) {
                }
            }
            if (flag == true) {
                JOptionPane.showMessageDialog(null, "Quedan usuarios con items pendientes");
            } else {
                try {
                    statement = "delete from " + tables[id] + " where unique_id = ?";
                    PreparedStatement pr = cn.prepareStatement(statement);
                    pr.setInt(1, id_item);
                    pr.executeUpdate();
                    pr.close();
                    JOptionPane.showMessageDialog(null, "Hecho!");
                } catch (Exception e) {
                }
            }
            try {
                cn.close();
            } catch (SQLException ex) {
                Logger.getLogger(IngresoMaster.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }

    private void modifEvent(int id) {
        String[] opciones = {"Modificar", "Agregar", "Cancelar"};
        String[] tables = {"items_data", "seguros_id", "inversiones_id", "tarjetas_id", "creditos_id", "stocks_data"};

        int seleccion = JOptionPane.showOptionDialog(
                null,
                "¿Qué acción deseas realizar?",
                "Seleccionar Acción",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                opciones,
                opciones[0]
        );

        switch (seleccion) {
            case 0:
                JFrame frame = new JFrame();
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);

                JPanel panel = new JPanel();
                panel.setLayout(null);
                panel.setBounds(0, 0, 600, 600);
                frame.add(panel);

                JLabel id_item = new JLabel();
                id_item.setText("ID item: ");
                id_item.setBounds(10, 10, 100, 25);
                panel.add(id_item);

                JTextField field_id = new JTextField();

                field_id.setBounds(10, 27, 100, 25);
                panel.add(field_id);

                Connection cn = c.getConnection();
                String statement = "select * from " + tables[id] + " where unique_id = ?";
                try {
                    PreparedStatement pst = cn.prepareStatement(statement);
                    pst.setInt(1, 1);
                    ResultSet rs = pst.executeQuery();
                    ResultSetMetaData data = rs.getMetaData();
                    int aux = data.getColumnCount();
                    frame.setSize(200, 90 + Math.max(45 * aux - 2, 0));
                    String[] niggas = new String[aux];
                    Map<String, JTextField> textFieldMap = new HashMap<>();
                    for (int i = 2; i <= aux; i++) {

                        JLabel label = new JLabel();
                        label.setName("label" + i);
                        label.setText(data.getColumnName(i));
                        label.setBounds(10, 10 + (i - 1) * 40, 100, 25);
                        panel.add(label);
                        niggas[i - 2] = data.getColumnName(i);

                        JTextField field = new JTextField();
                        field.setName("field" + i);
                        field.setBounds(10, 27 + (i - 1) * 40, 100, 25);
                        panel.add(field);
                        textFieldMap.put("field" + (i - 2), field);

                    }
                    pst.close();
                    rs.close();

                    JButton button = new JButton();
                    button.setText("Finalizar");
                    button.setBounds(50, 27 + aux * 40, 100, 25);
                    button.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            Connection cn = c.getConnection();
                            StringBuilder statement = new StringBuilder();
                            statement.append("update ").append(tables[id]).append(" set ");
                            for (int i = 0; i <= aux - 2; i++) {
                                statement.append(niggas[i]);
                                statement.append(" = ?, ");
                            }
                            statement.setLength(statement.length() - 2);
                            statement.append(" where unique_id  = ?");
                            String aux2 = statement.toString();
                            try {
                                PreparedStatement pst = cn.prepareStatement(aux2);
                                for (int i = 0; i < aux; i++) {
                                    JTextField textf = textFieldMap.get("field" + i);
                                    if (textf != null) {
                                        String text = textf.getText().trim();
                                        if (text.charAt(0) >= 65 && text.charAt(0) <= 90 || text.charAt(0) >= 97 && text.charAt(0) <= 122) {
                                            pst.setString(i + 1, text);
                                        } else {
                                            pst.setDouble(i + 1, Double.parseDouble(text.trim()));
                                        }
                                    }

                                }
                                pst.setInt(aux, Integer.parseInt(field_id.getText().trim()));
                                pst.executeUpdate();
                                pst.close();
                                JOptionPane.showMessageDialog(null, "hecho");
                                cn.close();
                            } catch (Exception e) {
                                System.out.println("Error en button: " + e);
                            }
                        }
                    });
                    panel.add(button);
                } catch (Exception e) {
                    System.out.println("Error en modif: " + e);
                }
                frame.setVisible(true);
                break;
            case 1:
                JFrame frame2 = new JFrame();
                frame2.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame2.setResizable(false);
                frame2.setLocationRelativeTo(null);
                JPanel panel2 = new JPanel();
                panel2.setLayout(null);
                panel2.setBounds(0, 0, 600, 600);
                frame2.add(panel2);

                JLabel id_item2 = new JLabel();
                id_item2.setText("ID item: ");
                id_item2.setBounds(10, 10, 100, 25);
                panel2.add(id_item2);

                JTextField field_id2 = new JTextField();

                field_id2.setBounds(10, 27, 100, 25);
                panel2.add(field_id2);

                Connection cnc = c.getConnection();
                String statement2 = "select * from " + tables[id];
                try {
                    PreparedStatement pst = cnc.prepareStatement(statement2);
                    ResultSet rs = pst.executeQuery();
                    ResultSetMetaData data = rs.getMetaData();
                    int aux = data.getColumnCount();
                    frame2.setSize(200, 90 + Math.max(45 * aux - 2, 0));
                    Map<String, JTextField> textFieldMap = new HashMap<>();
                    for (int i = 2; i <= aux; i++) {

                        JLabel label = new JLabel();
                        label.setName("label" + i);
                        label.setText(data.getColumnName(i));

                        label.setBounds(10, 10 + (i - 1) * 40, 100, 25);
                        panel2.add(label);

                        JTextField field = new JTextField();
                        field.setName("field" + i);
                        field.setBounds(10, 27 + (i - 1) * 40, 100, 25);
                        panel2.add(field);
                        textFieldMap.put("field" + (i - 2), field);

                    }
                    pst.close();
                    rs.close();

                    JButton button = new JButton();
                    button.setText("Finalizar");
                    button.setBounds(50, 27 + aux * 40, 100, 25);
                    button.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {

                            Connection cn = c.getConnection();
                            StringBuilder statement = new StringBuilder();
                            statement.append("insert into ").append(tables[id]).append(" values(");
                            for (int i = 0; i < aux; i++) {
                                statement.append("?,");
                            }
                            statement.setLength(statement.length() - 1);
                            statement.append(")");
                            String aux2 = statement.toString();
                            try {
                                PreparedStatement pst = cn.prepareStatement(aux2);
                                pst.setInt(1, Integer.parseInt(field_id2.getText().trim()));
                                for (int i = 0; i < aux; i++) {
                                    JTextField textf = textFieldMap.get("field" + i);
                                    if (textf != null) {
                                        String text = textf.getText().trim();
                                        if (text.charAt(0) >= 65 && text.charAt(0) <= 90 || text.charAt(0) >= 97 && text.charAt(0) <= 122) {
                                            pst.setString(i + 2, text);
                                        } else {
                                            pst.setDouble(i + 2, Double.parseDouble(text.trim()));
                                        }
                                    }

                                }

                                pst.executeUpdate();
                                pst.close();
                                JOptionPane.showMessageDialog(null, "hecho");
                                cn.close();
                            } catch (Exception e) {
                                System.out.println("Error en button: " + e);
                            }
                        }
                    });
                    panel2.add(button);
                } catch (Exception e) {
                    System.out.println("Error en modif: " + e);
                }
                frame2.setVisible(true);
                break;
            case 2:
                break;
            case JOptionPane.CLOSED_OPTION: // Si cierra el diálogo

                break;
        }
    }

    private void setTable(int tabla) {
        String[] tables = {"items_data", "seguros_id", "inversiones_id", "tarjetas_id", "creditos_id", "stocks_data"};
        Connection cn = c.getConnection();
        String statement = "select * from " + tables[tabla];
        try {
            PreparedStatement pst = cn.prepareStatement(statement);
            DefaultTableModel tableModel = new DefaultTableModel();
            ResultSet rs = pst.executeQuery();
            ResultSetMetaData data = rs.getMetaData();
            int aux = data.getColumnCount();
            for (int i = 1; i <= aux; i++) {
                tableModel.addColumn(data.getColumnName(i));
            }
            if (rs.next()) {
                do {
                    Object[] row = new Object[aux];
                    for (int i = 1; i <= aux; i++) {
                        row[i - 1] = rs.getObject(i);
                    }
                    tableModel.addRow(row);
                } while (rs.next());
            }

            JTable table = new JTable(tableModel);
            JScrollPane scrollPane = new JScrollPane(table);

            int rowHeight = table.getRowHeight();
            int rowCount = tableModel.getRowCount();
            int columnCount = tableModel.getColumnCount();

            int tableWidth = columnCount * 150;
            int tableHeight = rowHeight * (rowCount + 1);
            int maxTableHeight = 600;
            int maxTableWidth = 800;

            tableWidth = Math.min(tableWidth, maxTableWidth);
            tableHeight = Math.min(tableHeight, maxTableHeight);

            JFrame nuevoFrame = new JFrame("Datos de SQL");
            nuevoFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            nuevoFrame.setResizable(false);
            nuevoFrame.setLocationRelativeTo(null);
            nuevoFrame.setSize(tableWidth + 50, tableHeight + 50);
            nuevoFrame.add(scrollPane);

            nuevoFrame.setVisible(true);
            cn.close();
            pst.close();
            rs.close();
        } catch (Exception e) {
            System.out.println("Error jaj: " + e);
        }
    }

    private File selectedFile;
    private Conection c = new Conection();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton creditosBorrarButton;
    private javax.swing.JButton creditosModifButton;
    private javax.swing.JButton creditosTableButton;
    private javax.swing.JButton historialButton;
    private javax.swing.JButton inverBorrarButton;
    private javax.swing.JButton inverModifButton;
    private javax.swing.JButton inversionesTableButton;
    private javax.swing.JButton itemBorrarButton;
    private javax.swing.JButton itemModifButton;
    private javax.swing.JButton itemTableButton;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton mesesButton;
    private javax.swing.JButton plazoButton;
    private javax.swing.JButton seguroBorrarButton;
    private javax.swing.JButton seguroModifButton;
    private javax.swing.JButton segurosTableButton;
    private javax.swing.JButton stocksBorrarButton;
    private javax.swing.JButton stocksModifButton;
    private javax.swing.JButton stocksTableButton;
    private javax.swing.JButton tarjetaBorrarButton;
    private javax.swing.JButton tarjetaModifButton;
    private javax.swing.JButton tarjetasTableButton;
    // End of variables declaration//GEN-END:variables
}
