/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cajeroonline;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.ByteArrayInputStream;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.*;
import javax.swing.border.LineBorder;

/**
 *
 * @author User
 */
public class Mall extends javax.swing.JFrame {

    /**
     * Creates new form amal
     */
    public Mall() {
        initComponents();
        setLocationRelativeTo(null);

        panelCompra.removeAll();
        prepareItems(5);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        promos_button = new javax.swing.JButton();
        hogar_button = new javax.swing.JButton();
        tecno_button = new javax.swing.JButton();
        moda_button = new javax.swing.JButton();
        otros_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelCompra = new javax.swing.JPanel();
        Hogar = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        Promos = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        Tecno = new javax.swing.JPanel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Moda = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Otros = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 730));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel4.setBackground(new java.awt.Color(0, 0, 204));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BVVA Mall");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(544, 544, 544)
                .addComponent(jLabel4)
                .addContainerGap(650, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(1249, 1249, 1249))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(40, 40, 40))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 2562, 68);

        jPanel2.setBackground(new java.awt.Color(0, 0, 153));

        promos_button.setBackground(new java.awt.Color(0, 102, 255));
        promos_button.setText("Promos");
        promos_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                promos_buttonActionPerformed(evt);
            }
        });

        hogar_button.setBackground(new java.awt.Color(0, 102, 255));
        hogar_button.setText("Hogar");
        hogar_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hogar_buttonActionPerformed(evt);
            }
        });

        tecno_button.setBackground(new java.awt.Color(0, 102, 255));
        tecno_button.setText("Tecno");
        tecno_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tecno_buttonActionPerformed(evt);
            }
        });

        moda_button.setBackground(new java.awt.Color(0, 102, 255));
        moda_button.setText("Moda");
        moda_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moda_buttonActionPerformed(evt);
            }
        });

        otros_button.setBackground(new java.awt.Color(0, 102, 255));
        otros_button.setText("Otros");
        otros_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otros_buttonActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Puntos:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("fsdfds");

        jButton1.setText("Ver Items");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(otros_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moda_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tecno_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hogar_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(promos_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(52, 52, 52)
                .addComponent(promos_button)
                .addGap(41, 41, 41)
                .addComponent(hogar_button)
                .addGap(38, 38, 38)
                .addComponent(tecno_button)
                .addGap(37, 37, 37)
                .addComponent(moda_button)
                .addGap(34, 34, 34)
                .addComponent(otros_button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 36, 90, 660);

        panelCompra.setLayout(new java.awt.CardLayout());

        Hogar.setName("Hogar");
        Hogar.setBackground(new java.awt.Color(102, 102, 102));
        Hogar.setLayout(null);

        jButton16.setText("Anterior");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton16.getParent());
            }
        });
        Hogar.add(jButton16);
        jButton16.setBounds(900, 610, 73, 23);

        jButton17.setText("Siguiente");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton(evt, (JPanel) jButton17.getParent());
            }
        });
        Hogar.add(jButton17);
        jButton17.setBounds(980, 610, 90, 23);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Hogar.add(jPanel6);
        jPanel6.setBounds(488, 238, 100, 100);

        Promos.setBackground(new java.awt.Color(102, 102, 102));
        Promos.setLayout(null);
        Promos.setName("Promos");

        jButton7.setText("Siguiente");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton(evt,(JPanel) jButton7.getParent());
            }
        });
        Promos.add(jButton7);
        jButton7.setBounds(986, 611, 90, 23);

        jButton6.setText("Anterior");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton6.getParent());
            }
        });
        Promos.add(jButton6);
        jButton6.setBounds(907, 611, 73, 23);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Promos.add(jPanel7);
        jPanel7.setBounds(416, 236, 100, 100);

        Hogar.add(Promos);
        Promos.setBounds(0, 10, 1110, 640);

        panelCompra.add(Hogar, "card3");

        Tecno.setName("Tecno");
        Tecno.setBackground(new java.awt.Color(102, 102, 102));
        Tecno.setLayout(null);

        jButton18.setText("Anterior");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton18.getParent());
            }
        });
        Tecno.add(jButton18);
        jButton18.setBounds(905, 611, 73, 23);

        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton(evt,(JPanel) jButton19.getParent());
            }
        });
        jButton19.setText("Siguiente");
        Tecno.add(jButton19);
        jButton19.setBounds(984, 611, 90, 23);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Tecno.add(jPanel5);
        jPanel5.setBounds(506, 180, 100, 100);

        panelCompra.add(Tecno, "card4");

        Moda.setName("Moda");
        Moda.setBackground(new java.awt.Color(102, 102, 102));
        Moda.setForeground(new java.awt.Color(204, 204, 204));
        Moda.setLayout(null);

        jButton20.setText("Anterior");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton20.getParent());
            }
        });
        Moda.add(jButton20);
        jButton20.setBounds(907, 611, 73, 23);

        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton21.getParent());
            }
        });
        jButton21.setText("Siguiente");
        Moda.add(jButton21);
        jButton21.setBounds(986, 611, 90, 23);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Moda.add(jPanel3);
        jPanel3.setBounds(444, 220, 100, 100);

        panelCompra.add(Moda, "card5");

        Otros.setBackground(new java.awt.Color(102, 102, 102));
        Otros.setLayout(null);
        Otros.setName("Otros");

        jButton22.setText("Anterior");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevButton(evt,(JPanel) jButton22.getParent());
            }
        });
        Otros.add(jButton22);
        jButton22.setBounds(910, 610, 73, 23);

        jButton23.setText("Siguiente");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButton(evt,(JPanel) jButton23.getParent());
            }
        });
        Otros.add(jButton23);
        jButton23.setBounds(990, 610, 90, 23);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Otros.add(jPanel8);
        jPanel8.setBounds(450, 190, 100, 100);

        panelCompra.add(Otros, "card6");

        getContentPane().add(panelCompra);
        panelCompra.setBounds(88, 52, 1110, 640);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void promos_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_promos_buttonActionPerformed

        panelCompra.removeAll();
        prepareItems(5);
    }//GEN-LAST:event_promos_buttonActionPerformed

    private void hogar_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hogar_buttonActionPerformed

        panelCompra.removeAll();
        prepareItems(1);

    }//GEN-LAST:event_hogar_buttonActionPerformed

    private void tecno_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tecno_buttonActionPerformed

        panelCompra.removeAll();
        prepareItems(2);
    }//GEN-LAST:event_tecno_buttonActionPerformed

    private void moda_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moda_buttonActionPerformed

        panelCompra.removeAll();
        prepareItems(3);


    }//GEN-LAST:event_moda_buttonActionPerformed

    private void otros_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otros_buttonActionPerformed

        panelCompra.removeAll();
        prepareItems(4);
    }//GEN-LAST:event_otros_buttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection cn = c.getConnection();
        try {
            PreparedStatement pst = cn.prepareStatement("select s.cantidad, d.item_name from items_store s join items_data d on s.item_id = d.ui where user_id = ?");
            pst.setInt(1, id_user);
            ResultSet rs = pst.executeQuery();
            ArrayList<Object[]> list = new ArrayList<>();
            if (rs.next()) {
                do {
                    Object[] aux = {rs.getInt("cantidad"), rs.getString("item_name")};
                    list.add(aux);
                } while (rs.next());
                String[] list2 = new String[list.size()];
                int i = 0;
                for (Object[] obj : list) {
                    list2[i] = obj[0] + " x " + obj[1];
                    i++;
                }
                JOptionPane.showInputDialog(
                        null,
                        "Selecciona un ítem:",
                        "Ítems del Cliente",
                        JOptionPane.PLAIN_MESSAGE,
                        null,
                        list2,
                        list2[0]);
            } else {
                JOptionPane.showMessageDialog(null, "No posee items");
            }
            rs.close();
            pst.close();
        } catch (Exception e) {
            System.out.println("Error en verItems: " + e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void prevButton(java.awt.event.ActionEvent evt, JPanel jPanel) {
        Component[] obj = jPanel.getComponents();
        String aux = jPanel.getName() + "_pages";
        for (Component component : obj) {
            if (component.getName() != null && component.getName().equals(aux)) {
                CardLayout card = (CardLayout) ((JPanel) component).getLayout();
                card.previous((JPanel) component);
            }
        }
    }

    private void nextButton(java.awt.event.ActionEvent evt, JPanel jPanel) {
        Component[] obj = jPanel.getComponents();
        String aux = jPanel.getName() + "_pages";
        for (Component component : obj) {
            if (component.getName() != null && component.getName().equals(aux)) {

                CardLayout card = (CardLayout) ((JPanel) component).getLayout();
                card.next((JPanel) component);
            }
        }

    }

    public void getUser(String user) {
        this.user = user;
        Connection cn = c.getConnection();
        try {
            PreparedStatement pst = cn.prepareStatement("select * from user_data where user_user = ?");
            pst.setString(1, user);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                id_user = rs.getInt("ID");
                points = rs.getInt("points");
                tarjetas = rs.getInt("tarjetas");

            }
            pst.close();
            rs.close();
            cn.close();
        } catch (Exception e) {
            System.out.println("Error getuser: " + e);
        }
        prepareItems(5);
    }

    private void comprarButton(int ui, int puntos) {
        Connection cn = c.getConnection();
        try {
            PreparedStatement pst = cn.prepareStatement("select * from items_data where UI = ?");
            pst.setInt(1, ui);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                int stock = rs.getInt("stock");
                if (stock <= 0) {
                    JOptionPane.showMessageDialog(null, "No hay stock disponible");
                } else {
                    //
                    int precio = rs.getInt("price");
                    int cuotas = rs.getInt("cuotas");
                    int number = cuotas / 3;
                    //
                    PreparedStatement ps = cn.prepareStatement("update items_data set stock = stock - 1 where UI = ? ");
                    ps.setInt(1, ui);
                    ps.executeUpdate();
                    //
                    JTextField quantityField = new JTextField(10);
                    String[] paymentOptions = {"Pagar entero", "Pagar en cuotas"};
                    JComboBox<String> paymentOptionBox = new JComboBox<>(paymentOptions);
                    //
                    JLabel[] installmentLabels = new JLabel[number];
                    JRadioButton[] installmentOptions = new JRadioButton[number];
                    ButtonGroup installmentGroup = new ButtonGroup();
                    JTextField installmentQuantityField = new JTextField(10);
                    JLabel installmentLabel = new JLabel("Cantidad de cuotas:");
                    JLabel paymentLabel = new JLabel();
                    JPanel panel = new JPanel();
                    //
                    panel.setLayout(null);
                    quantityField.setBounds(140, 20, 150, 25);  // x, y, width, height
                    JLabel quantityLabel = new JLabel("Cantidad:");
                    quantityLabel.setBounds(20, 20, 80, 25);  // x, y, width, height
                    //
                    if (cuotas > 0 && tarjetas > 1) {
                        paymentOptionBox.setBounds(140, 60, 150, 25);
                        paymentLabel.setText("Opcion de pago:");
                        paymentLabel.setBounds(20, 60, 100, 25);
                        panel.setPreferredSize(new java.awt.Dimension(300, 100));
                    } else {
                        panel.setPreferredSize(new java.awt.Dimension(300, 50));
                    }

                    //
                    panel.add(quantityLabel);
                    panel.add(quantityField);
                    panel.add(paymentLabel);
                    panel.add(paymentOptionBox);

                    paymentOptionBox.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                            if (paymentOptionBox.getSelectedItem().equals("Pagar en cuotas")) {
                                for (int i = 0; i < number; i++) {
                                    installmentOptions[i] = new JRadioButton();
                                    installmentOptions[i].setBounds(20 + (i * 60), 100, 50, 30);
                                    installmentOptions[i].setName("Opcion de cuota" + (i + 1));
                                    installmentGroup.add(installmentOptions[i]);
                                    panel.add(installmentOptions[i]);

                                    installmentLabels[i] = new JLabel(((i + 1) * 3) + " Cuotas");

                                    installmentLabels[i].setBounds((i * 55) + i * 10, 130, 100, 30);
                                    panel.add(installmentLabels[i]);
                                }
                                Window window = SwingUtilities.getWindowAncestor(panel);
                                if (window instanceof JDialog) {
                                    JDialog dialog = (JDialog) window;
                                    dialog.setSize(400, 300);
                                }
                            } else {
                                panel.remove(installmentQuantityField);
                                panel.remove(installmentLabel);
                                panel.revalidate();
                                panel.repaint();
                                Window window = SwingUtilities.getWindowAncestor(panel);
                                if (window instanceof JDialog) {
                                    JDialog dialog = (JDialog) window;
                                    dialog.setSize(400, 200);
                                }
                            }
                        }
                    });

                    int result = JOptionPane.showConfirmDialog(null, panel, "Detalle de pago", JOptionPane.OK_CANCEL_OPTION);

                    if (result == JOptionPane.OK_OPTION) {
                        try {

                            int quantity = Integer.parseInt(quantityField.getText());
                            String paymentOption = (String) paymentOptionBox.getSelectedItem();

                            boolean flag = false;
                            boolean isInstallment = paymentOption.equals("Pagar en cuotas");
                            if (!isInstallment) {
                                PreparedStatement pago = cn.prepareStatement("select money, points from user_data where user_user = ?");
                                pago.setString(1, user);
                                ResultSet r = pago.executeQuery();
                                if (r.next()) {
                                    double aux = r.getDouble("money");
                                    if (puntos > 0) {
                                        int point = r.getInt("points");
                                        if (Promos.isShowing()) {
                                            if (puntos * quantity < point) {
                                                PreparedStatement desc = cn.prepareStatement("update user_data set points = points - ? where user_user = ?");
                                                desc.setInt(1, puntos * quantity);
                                                desc.setString(2, user);
                                                desc.executeUpdate();
                                                flag = true;
                                                desc.close();
                                            }

                                        } else if (point >= puntos * quantity && aux >= precio * quantity) {
                                            PreparedStatement desc = cn.prepareStatement("update user_data set money = money - ?, points = points - ? where user_user = ?");
                                            desc.setDouble(1, precio * quantity);
                                            desc.setInt(2, puntos * quantity);
                                            desc.setString(3, user);
                                            desc.executeUpdate();
                                            desc.close();
                                            flag = true;

                                        } else {
                                            JOptionPane.showMessageDialog(null, "No tiene dinero y/o puntos suficientes");
                                        }
                                        getUser(user);
                                    } else {
                                        if (precio > aux) {
                                            JOptionPane.showMessageDialog(null, "No tiene dinero suficiente");
                                        } else {
                                            PreparedStatement desc = cn.prepareStatement("update user_data set money = money - ?, points = points + ? where user_user = ?");
                                            desc.setDouble(1, precio * quantity);
                                            if (precio > 100000) {
                                                desc.setInt(2, 25000);
                                            } else {
                                                desc.setInt(2, (precio / 4) * quantity);
                                            }
                                            desc.setString(3, user);
                                            desc.executeUpdate();
                                            flag = true;
                                            desc.close();
                                        }
                                    }
                                }
                                r.close();
                                pago.close();
                            } else {
                                int quota = 3;
                                for (int i = 0; i < number; i++) {
                                    if (installmentOptions[i].isSelected()) {
                                        String text = installmentLabels[i].getText();
                                        String numbers = text.replaceAll("[^0-9]", "");
                                        quota = Integer.parseInt(numbers);
                                    }
                                }
                                java.util.Date utilDate = new java.util.Date(); // Fecha actual
                                java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());

                                PreparedStatement pago = cn.prepareStatement("insert into tarjeta_data values(?,?,?,?,?,?,?,?)");
                                pago.setInt(1, id_user);
                                pago.setInt(2, tarjetas);
                                pago.setDouble(3, precio / quota);
                                pago.setInt(4, quota);
                                pago.setInt(5, precio);
                                pago.setString(6, "0");
                                pago.setInt(7, 0);
                                pago.setDate(8, sqlDate);
                                pago.executeUpdate();
                                flag = true;
                                pago.close();

                            }
                            if (quantity > stock || quantity == 0 && flag) {
                                JOptionPane.showMessageDialog(null, "Solo hay " + stock + " de stock");
                                PreparedStatement p = cn.prepareStatement("update items_data set stock = stock + 1 where UI = ? ");
                                p.setInt(1, ui);
                                p.executeUpdate();
                                comprarButton(ui, puntos);
                                p.close();
                            } else if (flag) {
                                int id_items = rs.getInt("id_item");
                                PreparedStatement p = cn.prepareStatement("update items_data set stock = stock - ? where UI = ? ");
                                p.setInt(1, quantity - 1);
                                p.setInt(2, ui);
                                p.executeUpdate();
                                prepareItems(id_items);
                                PreparedStatement ins = cn.prepareStatement("insert into items_store values(?,?,?,?)");
                                ins.setInt(1, id_user);
                                ins.setInt(2, ui);
                                ins.setInt(3, quantity);
                                ins.setString(4, "0");
                                ins.executeUpdate();
                                p.close();
                                ins.close();
                                JOptionPane.showMessageDialog(null, "Se guardo el pago!");
                            }

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {

                        PreparedStatement p = cn.prepareStatement("update items_data set stock = stock + 1 where UI = ? ");
                        p.setInt(1, ui);
                        p.executeUpdate();
                        p.close();
                    }
                }
            }
            rs.close();
            pst.close();
            cn.close();
        } catch (Exception e) {
            System.out.println("Error Pago: " + e);
        }
    }

    private void prepareItems(int id_items) {
        JPanel[] op = {Otros, Hogar, Tecno, Moda, Otros, Promos};
        op[id_items].remove(2);
        jLabel2.setText(String.valueOf(points));
        int aux = 135;
        int auy = 70;
        int x = aux;
        int y = auy;
        int count = 0;
        String s = op[id_items].getName();
        String statement;
        if (id_items == 5) {
            statement = "select * from items_data where promo = ?";
        } else {
            statement = "select * from items_data where id_item = ?";
        }

        JPanel frame = new JPanel();
        JPanel page = new JPanel();
        page.setBackground(new Color(187,187,187));
        CardLayout cardLayout = new CardLayout();
        Connection cn = c.getConnection();

        frame.setName(s + "_pages");
        frame.setBounds(0, 0, 2400, 600);
        page.setName(s + "page");
        frame.setLayout(cardLayout);
        page.setLayout(null);
        page.setBounds(0, 0, 1000, 500);
        frame.add(page);
        op[id_items].add(frame);

        try {
            PreparedStatement pst = cn.prepareStatement(statement);
            if (id_items == 5) {
                pst.setInt(1, 1);
            } else {
                pst.setInt(1, id_items);
            }

            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                 Font font = new Font("Segoe UI Light", Font.PLAIN, 14);
                do {
                    String item_name = rs.getString("item_name");
                    int price = rs.getInt("price");
                    int stock = rs.getInt("stock");
                    int cuotas = rs.getInt("cuotas");
                    int iu = rs.getInt("UI");
                    byte[] imagen = rs.getBytes("image");
                    int puntos = 0;
                    if (id_items == 5) {
                        int temp = (int) (price * 20 / 100);
                        puntos = temp * 4;
                        price = price - temp;
                    }
                    ByteArrayInputStream bis;
                    ImageIcon imageIcon = null;
                    Image scaledImage;
                    ImageIcon scaledIcon = null;
                    if (imagen != null) {
                        bis = new ByteArrayInputStream(imagen);
                        imageIcon = new ImageIcon(javax.imageio.ImageIO.read(bis));
                        int panelWidth = 100;
                        int panelHeight = 100;
                        scaledImage = imageIcon.getImage().getScaledInstance(panelWidth, panelHeight, Image.SCALE_SMOOTH);
                        scaledIcon = new ImageIcon(scaledImage);
                    }

                    count++;
                    JLabel item = new JLabel();
                    item.setBounds(x, y, 100, 100);
                    item.setName(s + "item");
                    item.setIcon(scaledIcon);
                    item.setBorder(BorderFactory.createLineBorder(Color.BLACK));
                    page.add(item);
                    JLabel name = new JLabel();
                    name.setBounds(x + 15, y + 105, 150, 16);
                    name.setText("Item: " + item_name);
                    name.setForeground(Color.white);
                    name.setFont(font);
                    page.add(name);
                    JLabel prices = new JLabel();
                    prices.setBounds(x + 15, y + 120, 80, 16);
                    prices.setText("Precio: " + price);
                    prices.setForeground(Color.white);
                    prices.setFont(font);
                    page.add(prices);
                    JLabel stocks = new JLabel();
                    stocks.setBounds(x + 15, y + 135, 80, 16);
                    stocks.setText("Stock: " + stock);
                    stocks.setForeground(Color.white);
                    stocks.setFont(font);
                    page.add(stocks);
                    int arreglo = 175;
                    if (id_items != 5) {
                        JLabel cuota = new JLabel();
                        cuota.setBounds(x + 15, y + 150, 80, 16);
                        cuota.setText("Cuota: " + cuotas);
                        cuota.setForeground(Color.white);
                        cuota.setFont(font);
                        page.add(cuota);
                    } else {
                        JLabel punto = new JLabel();
                        punto.setBounds(x + 15, y + 150, 80, 16);
                        punto.setText("Puntos: " + puntos);
                        punto.setForeground(Color.white);
                        punto.setFont(font);
                        page.add(punto);
                        arreglo += 15;
                    }
                    if (count % 4 != 0) {
                        JPanel lineav = new JPanel();
                        lineav.setBounds(x + 175, y - 20, 1, 251);
                        lineav.setBackground(Color.BLUE);
                        page.add(lineav);
                    }
                    if (count < 5) {
                        JPanel lineah = new JPanel();
                        lineah.setBounds(x - 75, y + 230, 250, 1);
                        lineah.setBackground(Color.BLUE);
                        page.add(lineah);
                    }

                    JButton button = new JButton("Comprar ahora!");
                    button.setBounds(x - 10, y + arreglo, 120, 30);
                    final int puntosf = puntos;
                    button.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            comprarButton(iu, puntosf);
                        }
                    });
                    page.add(button);

                    x += 250;
                    if (count % 8 != 0 && count % 4 == 0) {
                        y += 250;
                        x = aux;
                    }

                    if (count % 8 == 0) {
                        page = new JPanel();
                        page.setLayout(null);
                        page.setBounds(0, 0, 1000, 500);
                        page.setBackground(new Color(187,187,187));
                        frame.add(page, "page" + count);
                        x = aux;
                        y = auy;
                        count = 0;
                    }

                } while (rs.next());

                op[id_items].revalidate();
                op[id_items].repaint();
                panelCompra.add(op[id_items]);
                panelCompra.revalidate();
                panelCompra.repaint();

            }

        } catch (Exception e) {
            System.out.println("AAAA" + e);
        }
    }

    private Conection c = new Conection();
    private String user;
    private int id_user, points, tarjetas;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Hogar;
    private javax.swing.JPanel Moda;
    private javax.swing.JPanel Otros;
    private javax.swing.JPanel Promos;
    private javax.swing.JPanel Tecno;
    private javax.swing.JButton hogar_button;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton moda_button;
    private javax.swing.JButton otros_button;
    private javax.swing.JPanel panelCompra;
    private javax.swing.JButton promos_button;
    private javax.swing.JButton tecno_button;
    // End of variables declaration//GEN-END:variables

}
